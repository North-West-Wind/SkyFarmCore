buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name "Forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.0.8'
group = 'ml.northwestwind.skyfarm' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'skyfarm'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    mappings channel: 'official', version: '1.16.5'
    runs {
        client {
            workingDirectory project.file('run')
            arg "-mixin.config=skyfarm.mixins.json"
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                skyfarm {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                skyfarm {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'skyfarm', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                skyfarm {
                    source sourceSets.main
                }
            }
        }
    }
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

jar {
    classifier = "1.16.5"
    manifest {
        attributes([
            "Specification-Title": "skyfarm",
            "Specification-Vendor": "skyfarm",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"skyfarm",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),

            "MixinConfigs": "skyfarm.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

repositories {
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
    maven { url 'https://jitpack.io' }
    maven {
        url 'https://maven.blamejared.com'
    }
    maven { url = "https://repo.spongepowered.org/maven" }
}

dependencies {
    /* minecraft dependency is here */
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.0'
    annotationProcessor "org.spongepowered:mixin:0.8.2:processor"

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")
    compile fg.deobf("net.darkhax.gamestages:GameStages-${mc_version}:${gamestage_version}")
    compile fg.deobf("net.darkhax.bookshelf:Bookshelf-${mc_version}:${bookshelf_version}")

    compile fg.deobf("mekanism:Mekanism:${mc_version}-${mekanism_version}")
    compile fg.deobf("mekanism:Mekanism:${mc_version}-${mekanism_version}:generators")
}

mixin {
    add sourceSets.main, "skyfarm.refmap.json"
}